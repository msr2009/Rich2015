.TH "ENRICH2" "1" "July 09, 2014" "2.0" "Enrich2"
.SH NAME
enrich2 \- Enrich2 Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructuredText.
.
.sp
Enrich is an analysis pipeline for using high throughput sequencing data to assess protein sequence\-function relationships.
[image]
.sp
Contents:
.SH DATACONTAINER --- ABSTRACT CLASS FOR ENRICH DATA
.sp
The \fBdatacontainer\fP module contains the class definition for the \fBDataContainer\fP abstract class, the shared base class for most classes in the \fI\%Enrich2\fP project.
.SS \fBDataContainer\fP class
.INDENT 0.0
.TP
.B class datacontainer.DataContainer(config)
Abstract class for all data\-containing classes 
(\fBseqlib.seqlib.SeqLib\fP, \fBselection.Selection\fP, and 
\fBexperiment.Experiment\fP). Creating a 
\fBdatacontainer.DataContainer\fP  requires a valid \fIconfig\fP object, 
usually from a \fB.json\fP configuration file.
.IP Note
Example configuration files can be found in the documentation     for derived classes.
.RE
.sp
Log file messages for filtered reads are defined here in the 
\fB_filter_messages\fP dictionary. New read filtering options must have an 
associated log file output message added to the dictionary.
.sp
.nf
.ft C
    # When adding new messages, update the documentation line numbers also!
    _filter_messages = {
            # SeqLib messages
            \(aqremove unresolvable\(aq : "unresolvable mismatch",
            \(aqmin quality\(aq : "single\-base quality",
            \(aqavg quality\(aq : "average quality",
            \(aqmax mutations\(aq : "excess mutations",
            \(aqchastity\(aq : "not chaste",
            \(aqremove overlap indels\(aq : "indel in read overlap",
            \(aqmerge failure\(aq : "unable to merge reads",
            # Selection messages
            \(aqmin count\(aq : "not enough variant reads",
            \(aqmin input count\(aq : "not enough variant reads in input",
            \(aqmin rsquared\(aq : "low r\-squared",
            \(aqmax barcode variation\(aq : "high barcode CV"
            # Experiment messages

.ft P
.fi
.INDENT 7.0
.TP
.B calculate()
Pure virtual method that defines how the data are calculated.
.UNINDENT
.INDENT 7.0
.TP
.B dump_data(keys=None)
Save the \fI\%pandas.DataFrame\fP objects as tab\-separated files and 
set the data to \fBNone\fP to save memory. The 
file names are stored for use by \fBrestore_data()\fP.
.sp
The optional \fIkeys\fP parameter is a list of types of data to be 
dumped (variant, barcode, etc.). By default, all data are dumped.
.UNINDENT
.INDENT 7.0
.TP
.B make_plots(subdirectory=None, keys=None)
Pure virtual method for creating plots.
.UNINDENT
.INDENT 7.0
.TP
.B restore_data(keys=None)
Load the data from the \fB.tsv\fP files written by \fBdump_data()\fP.
.sp
The optional \fIkeys\fP parameter is a list of types of data to be 
restored (variant, barcode, etc.). By default, all data are restored.
.UNINDENT
.INDENT 7.0
.TP
.B set_filters(config_filters, default_filters)
Sets the filtering options using the values from the \fIconfig_filters\fP 
dictionary and \fIdefault_filters\fP dictionary.
.IP Note
To help prevent user error, \fIconfig_filters\fP must be a         subset of \fIdefault_filters\fP.
.RE
.UNINDENT
.INDENT 7.0
.TP
.B set_output_base(dirname)
Sets the object\(aqs base output directory (used for 
\fBdump_data()\fP and other class\-specific methods) to \fIdirname\fP 
and creates the directory if it doesn\(aqt exist.
.UNINDENT
.INDENT 7.0
.TP
.B sort_data(column, keys=None)
Sort the \fI\%pandas.DataFrame\fP objects according the to the values in column \fIkey\fP. The data are 
sorted in descending order, with the \fBNaN\fP values at the end.
.sp
The optional \fIkeys\fP parameter is a list of types of data to be 
sorted (variant, barcode, etc.). By default, all data are sorted.
.UNINDENT
.INDENT 7.0
.TP
.B write_all()
Pure virtual method for writing \fI\%pandas.DataFrame\fP contents to disk.
.UNINDENT
.INDENT 7.0
.TP
.B write_data(subdirectory=None, keys=None)
Save the \fI\%pandas.DataFrame\fP objects as tab\-separated files 
with the same name as the object.
.sp
The optional \fIkeys\fP parameter is a list of types of data to be 
saved (variant, barcode, etc.). By default, all data are saved.
.sp
Returns a dictionary with \fIkeys\fP as the keys and corresponding filenames for the \fB.tsv\fP files as the values. This dictionary is required by \fBdump_data()\fP
.UNINDENT
.UNINDENT
.SS \fBdatacontainer\fP utility functions
.INDENT 0.0
.TP
.B datacontainer.fix_filename(s)
Clean up a filename \fIs\fP by removing invalid characters and converting 
spaces to underscores. Returns the cleaned filename.
.UNINDENT
.SH SEQUENCING LIBRARY MODULES
.sp
Data for each \fI\%FASTQ\fP file (or pair of \fI\%FASTQ\fP files for overlapping paired\-end data) is read into its own SeqLib\-family object.
.SS \fBseqlib\fP \-\-\- Abstract class for sequencing libraries
.sp
The \fBseqlib\fP module contains the class definition for the \fBSeqLib\fP abstract class, the base class for all sequencing library data in the \fI\%Enrich2\fP project.
.SS \fBSeqLib\fP class
.INDENT 0.0
.TP
.B class seqlib.seqlib.SeqLib(config)
Abstract class for handling count data from a single sequencing library.
Creating a \fBseqlib.seqlib.SeqLib\fP requires a valid \fIconfig\fP 
object, usually from a \fB.json\fP configuration file.
.IP Note
Example configuration files can be found in the documentation     for derived classes.
.RE
.INDENT 7.0
.TP
.B calculate()
Pure virtual method that defines how the data are counted.
.UNINDENT
.INDENT 7.0
.TP
.B report_filtered_read(fq, filter_flags)
Write the \fBFQRead\fP object \fIfq\fP to the \fBDEBUG\fP
logging . The dictionary \fIfilter_flags\fP contains \fBTrue\fP 
values for each filtering option that applies to \fIfq\fP. Keys in 
\fIfilter_flags\fP are converted to messages using the 
\fBDataContainer._filter_messages\fP dictionary.
.UNINDENT
.UNINDENT
.SS \fBvariant\fP \-\-\- Abstract class for sequencing libraries with variants
.sp
The \fBvariant\fP module contains the class definition for the abstract class \fBVariantSeqLib\fP, the base class for sequencing library data with an associated wild type sequence.
.SS \fBVariantSeqLib\fP class
.INDENT 0.0
.TP
.B class seqlib.variant.VariantSeqLib(config, parent=True)
Abstract \fBSeqLib\fP class for for Enrich libraries containing variants. Implements core functionality for assessing variants, either coding
or noncoding. Subclasess must evaluate the variant DNA sequences that are being counted.
.INDENT 7.0
.TP
.B align_variant(variant_dna)
Use the local \fBAligner\fP instance to align the \fIvariant_dna\fP to the 
wild type sequence. Returns a list of HGVS variant strings.
.sp
Aligned variants are stored in a local dictionary to avoid recomputing alignments. This 
dictionary should be cleared after all variants are counted, to save memory.
.IP Warning
Using the \fBAligner\fP dramatically increases runtime.
.RE
.UNINDENT
.INDENT 7.0
.TP
.B count_mutations(include_indels=False)
Count the individual mutations in all variants. If \fIinclude_indels\fP is \fBFalse\fP, all mutations in a variant that contains 
an insertion/deletion/duplication will not be counted. For coding sequences, amino acid substitutions are counted
independently of the corresponding nucleotide change.
.UNINDENT
.INDENT 7.0
.TP
.B count_variant(variant_dna, copies=1, include_indels=True)
Identifies mutations and counts the \fIvariant_dna\fP sequence.
The algorithm attempts to call variants by comparing base\-by\-base.
If the \fIvariant_dna\fP and wild type DNA are different lengths, or if there
are an excess of mismatches (indicating a possible indel), local
alignment is performed using \fBalign_variant()\fP if this option 
has been selected in the configuration.
.sp
Each variant is stored as a tab\-delimited string of mutations in HGVS 
format. Returns a list of HGSV variant strings. Returns an empty list 
if the variant is wild type. Returns None if the variant was discarded
due to excess mismatches.
.UNINDENT
.INDENT 7.0
.TP
.B is_coding()
Return \fBTrue\fP if the variants are protein\-coding, else \fBFalse\fP.
.UNINDENT
.INDENT 7.0
.TP
.B set_wt(sequence, coding=True)
Set the wild type DNA \fIsequence\fP. The \fIsequence\fP is translated if \fIcoding\fP 
is \fBTrue\fP. The \fIsequence\fP may only contain \fBACGT\fP, but may 
contain whitespace (which will be removed). If \fIcoding\fP, \fIsequence\fP must be in\-frame.
.UNINDENT
.UNINDENT
.SS \fBbasic\fP \-\-\- Single\-read sequencing library
.sp
The \fBbasic\fP module contains the class definition for the \fBBasicSeqLib\fP, which stores data from a sequencing library constructed to have a single read (forward or reverse) for each variant sequence.
.SS Configuration options
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP or \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Only one \fI\%FASTQ\fP file may be specified. If the file is \(aqreverse\(aq, all reads will be reverse\-complemented before variants are called.
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP  \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that the read has the chastity bit set in the \fI\%FASTQ\fP header.
.TP
.B \fB\(aqmax mutations\(aq\fP
Maximum number of mutations allowed for the variant.
.UNINDENT
.UNINDENT
.SS \fBBasicSeqLib\fP class
.INDENT 0.0
.TP
.B class seqlib.basic.BasicSeqLib(config)
Class for count data from sequencing libraries with a single read for 
each variant. Creating a \fBBasicSeqLib\fP requires a valid 
\fIconfig\fP object, usually from a \fB.json\fP configuration file.
.INDENT 7.0
.TP
.B calculate()
Reads the forward or reverse FASTQ file (reverse reads are reverse\-complemented),
performs quality\-based filtering, and counts the variants.
.UNINDENT
.UNINDENT
.SS \fBoverlap\fP \-\-\- Overlapping paired\-end sequencing library
.sp
The \fBoverlap\fP module contains the class definition for the \fBOverlapSeqLib\fP, which stores data from a sequencing library constructed to have an overlapping read pair (forward and reverse) for each variant sequence.
.SS Configuration options
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP and \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Both \fI\%FASTQ\fP files must be specified. All reads in the \(aqreverse\(aq file will be reverse\-complemented during the merging process.
.UNINDENT
.TP
.B \fB\(aqoverlap\(aq\fP \- \fIrequired\fP
Information about how the forward and reverse reads should be combined.
.INDENT 7.0
.TP
.B \fB\(aqforward start\(aq\fP \- \fIrequired\fP
Position in the forward read (first base is position 1) where the overlapping region begins.
.TP
.B \fB\(aqreverse start\(aq\fP \- \fIrequired\fP
Position in the reverse read (first base is position 1) where the overlapping region begins. This is the position in the read before reverse\-complementing.
.TP
.B \fB\(aqlength\(aq\fP \- \fIrequired\fP
Number of bases in the overlaping region.
.UNINDENT
.TP
.B \fB\(aqoverlap only\(aq\fP \- \fIrequired\fP
If this option is \fBTrue\fP, the portions of the read that are outside the overlapping region will be trimmed before calling variants. Otherwise, the portion of the forward read before the overlapping region and the portion of the reverse read after the overlapping region are included in the variant sequence.
.TP
.B \fB\(aqmax mismatches\(aq\fP \- \fIrequired\fP
The maximum number of mismatches tolerated in the overlapping region.
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the merged read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the merged read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that both forward and reverse reads have the chastity bit set in their \fI\%FASTQ\fP headers.
.TP
.B \fB\(aqmax mutations\(aq\fP
Maximum number of mutations allowed for the variant.
.TP
.B \fB\(aqremove unresolvable\(aq\fP
Remove merged reads with unresolvable mismatches (different nucleotides with the same quality score at the same position).
.UNINDENT
.UNINDENT
.SS \fBOverlapSeqLib\fP class
.INDENT 0.0
.TP
.B class seqlib.overlap.OverlapSeqLib(config)
Class for count data from sequencing libraries with overlapping paired\-end 
reads for each variant. Creating a 
\fBOverlapSeqLib\fP requires a valid \fIconfig\fP object 
with an \fB\(aqoverlap\(aq\fP entry.
.sp
Example config file for a \fBOverlapSeqLib\fP:
.sp
.nf
.ft C
{
  "name" : "Sample Overlap Library",
  "timepoint" : 0,
  "wild type" : {
    "sequence" : "CGACGCAAGGAGTAG",
    "coding" : true
  },
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_forward_reads.fq",
    "reverse" : "/path/to/FASTQ/sample_reverse_reads.fq"
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true,
    "max mutations" : 4
  },
  "overlap" : {
    "forward start" : 3,
    "reverse start" : 5,
    "length" : 9,
    "overlap only" : false,
    "max mismatches" : 5
  }
}

.ft P
.fi
.sp
\fBDownload this JSON file\fP
.sp
The \fB"fastq"\fP config entry must contain two read files, with the keys 
\fB"forward"\fP and \fB"reverse"\fP. Information about how to combine these 
reads is in the \fB"overlap"\fP config entry.
.sp
The \fB"overlap"\fP config entry contains the following keys:
.INDENT 7.0
.IP \(bu 2
\fB"forward start"\fP \-\-\- position in the forward read where the         overlapping region begins
.IP \(bu 2
\fB"reverse start"\fP \-\-\- position in the reverse read where the         overlapping region begins (before being reverse\-complemented)
.IP \(bu 2
\fB"length"\fP \-\-\- number of bases in the overlapping region
.IP \(bu 2
\fB"max mismatches"\fP \-\-\- maximum number of mismatches tolerated in the         overlapping region before discarding the read
.IP \(bu 2
\fB"overlap only"\fP \-\-\- whether to trim the merged read to contain only         the overlapping region (optional, defaults to \fBFalse\fP)
.UNINDENT
.sp
Here is a schematic of the case in the above JSON example:
.sp
.nf
.ft C
forward \-\-\-> 1   
             CGACGCAAGGA
               |||||||||
               ACTCCTTGCGTCG
                           1 <\-\-\- reverse
.ft P
.fi
.sp
Note that the merged sequence is identical to the wild type sequence given 
in the JSON file.
.INDENT 7.0
.TP
.B calculate()
Reads the forward and reverse reads, merges them, performs 
quality\-based filtering, and counts the variants.
.UNINDENT
.INDENT 7.0
.TP
.B merge_reads(fwd, rev)
Combines the \fIfwd\fP and \fIrev\fP \fBFQRead\fP objects into a 
single \fBFQRead\fP with the same header information as 
\fIfwd\fP. Mismatches are resolved by taking the highest quality base. If 
discrepant bases have the same quality value, this position is 
unresolvable and an \fB\(aqX\(aq\fP is inserted. Quality values in the 
resulting \fBFQRead\fP are the maximum quality for the 
given base at that position. Returns \fBNone\fP if the maximum number of 
mismatches in the overlap region is exceded.
.UNINDENT
.UNINDENT
.SS \fBbarcode\fP \-\-\- Barcoded sequencing library
.sp
The \fBbarcode\fP module contains the class definition for the \fBBarcodeSeqLib\fP, which stores data from a sequencing library consisting of single\-read barcode data. This class does not incorporate variant information, and is used solely for barcode quantification.
.SS Configuration options
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP or \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Only one \fI\%FASTQ\fP file may be specified. If the file is \(aqreverse\(aq, all reads will be reverse\-complemented before barcodes are counted.
.TP
.B \fB\(aqstart\(aq\fP
Starting position of the barcode in the read (first base is position 1). Used for optional read trimming.
.TP
.B \fB\(aqlength\(aq\fP
Number of bases in the barcode. Used for optional read trimming.
.UNINDENT
.TP
.B \fB\(aqbarcodes\(aq\fP \- \fIrequired\fP
This config option must be present for the sequences to be treated as barcodes, even if it has no elements in it.
.INDENT 7.0
.TP
.B \fB\(aqmin count\(aq\fP
Minimum count for a barcode to be included in the analysis. Barcodes with counts below this threshold will be output as low abundance barcodes, then discarded.
.IP Note
Use of this option is strongly encouraged to limit the amount of memory required for the analysis.
.RE
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that the read has the chastity bit set in the \fI\%FASTQ\fP header.
.UNINDENT
.UNINDENT
.SS \fBBarcodeSeqLib\fP class
.INDENT 0.0
.TP
.B class seqlib.barcode.BarcodeSeqLib(config, barcodevariant=False)
Class for count data from barcoded sequencing libraries. Designed for 
barcode\-only quantification or as a parent class for 
\fBBarcodeVariantSeqLib\fP. Creating a 
\fBBarcodeSeqLib\fP requires a valid \fIconfig\fP 
object with a \fB"barcodes"\fP entry (this entry can be empty).
.sp
Example config file for a \fBBarcodeSeqLib\fP:
.sp
.nf
.ft C
{
  "name" : "Sample Barcode Library",
  "timepoint" : 0,
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_reads.fq",
    "start" : 1,
    "length" : 16
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true
  },
  "barcodes" : {
    "min count" : 5
  }
}

.ft P
.fi
.sp
\fBDownload this JSON file\fP
.sp
The \fB"fastq"\fP config entry can contain one read file, with the key 
\fB"forward"\fP or \fB"reverse"\fP. If the read file is \fB"reverse"\fP, all 
barcodes will be reverse\-complemented before being counted. The 
\fB"fastq"\fP entry can contain optional values \fB"start"\fP and 
\fB"length"\fP, which will be used to trim the barcodes before counting. 
Bases are counted starting at 1.
.sp
The \fB"min count"\fP entry in \fB"barcodes"\fP is used to filter out 
low\-abundance barcodes (likely the result of technical artifacts). 
Barcodes that occur less than \fB"min count"\fP times are removed from the 
dataset. Setting the \fB"min count"\fP option appropriately can 
dramatically improve execution time and reduce memory usage.
.IP Note
The \fBBarcodeVariantSeqLib\fP     class implements an alternative method for removing artifactual barcodes     that may be more appropriate for users of that module.
.RE
.INDENT 7.0
.TP
.B calculate()
Reads the forward or reverse FASTQ file (reverse reads are 
reverse\-complemented), performs quality\-based filtering, and counts 
the barcodes.
.UNINDENT
.UNINDENT
.SS \fBbarcodevariant\fP \-\-\- Barcoded variant sequencing library
.sp
The \fBbarcodevariant\fP module contains the class definition for the \fBBarcodeVariantSeqLib\fP, which stores data from a sequencing library consisting of single\-read barcode data and the variant associated with each barcode.
.SS Configuration options
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP or \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Only one \fI\%FASTQ\fP file may be specified. If the file is \(aqreverse\(aq, all reads will be reverse\-complemented before barcodes are counted.
.TP
.B \fB\(aqstart\(aq\fP
Starting position of the barcode in the read (first base is position 1). Used for optional read trimming.
.TP
.B \fB\(aqlength\(aq\fP
Number of bases in the barcode. Used for optional read trimming.
.UNINDENT
.TP
.B \fB\(aqbarcodes\(aq\fP \- \fIrequired\fP
This config option must be present for the sequences to be treated as barcodes, even if it has no elements in it.
.INDENT 7.0
.TP
.B \fB\(aqmap file\(aq\fP
Path to the \fBBarcodeMap\fP file mapping barcodes to variant sequences. If this option is not set, the \fBBarcodeMap\fP from the \fBSelection\fP will be used.
.TP
.B \fB\(aqmin count\(aq\fP
Minimum count for a barcode to be included in the analysis. Barcodes with counts below this threshold will be output as low abundance barcodes, then discarded.
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that the read has the chastity bit set in the \fI\%FASTQ\fP header.
.TP
.B \fB\(aqmax mutations\(aq\fP
Maximum number of mutations allowed for the variant.
.UNINDENT
.UNINDENT
.SS \fBBarcodeMap\fP class
.INDENT 0.0
.TP
.B class seqlib.barcodevariant.BarcodeMap(mapfile)
Dictionary\-derived class for storing the relationship between barcodes 
and variants. Requires the path to a \fImapfile\fP, containing lines in the 
format \fB\(aqbarcode<tab>variant\(aq\fP for each barcode expected in the library. 
This file can be plain text or compressed (\fB.bz2\fP or \fB.gz\fP).
.sp
Barcodes must only contain the characters \fBACGT\fP and variants must only 
contain the characters \fBACGTN\fP (lowercase characters are also accepted).
.UNINDENT
.SS \fBBarcodeVariantSeqLib\fP class
.INDENT 0.0
.TP
.B class seqlib.barcodevariant.BarcodeVariantSeqLib(config, barcode_map=None)
Class for counting variant data from barcoded sequencing libraries. 
Creating a \fBBarcodeVariantSeqLib\fP requires a valid \fIconfig\fP 
object with an \fB\(aqbarcodes\(aq\fP entry and information about the wild type 
sequence.
.sp
Example config file for a \fBBarcodeVariantSeqLib\fP:
.sp
.nf
.ft C
{
  "name" : "Sample Barcode Library",
  "timepoint" : 0,
  "wild type" : {
    "sequence" : "CGACGCAAGGAGTAG",
    "coding" : true
  },
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_reads.fq",
    "start" : 1,
    "length" : 16
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true,
    "max mutations" : 4
  },
  "barcodes" : {
    "map file" : "/path/to/map/file/barcode_map.txt"
  }
}

.ft P
.fi
.sp
\fBDownload this JSON file\fP
.sp
The \fBbarcode_map\fP keyword argument can be used to pass an existing 
\fBBarcodeMap\fP, but only if the 
\fB"map file"\fP entry is absent from \fIconfig\fP.
.INDENT 7.0
.TP
.B calculate()
Counts the barcodes using \fBBarcodeSeqLib.count()\fP and combines them into 
variant counts using the \fBBarcodeMap\fP.
.UNINDENT
.INDENT 7.0
.TP
.B report_filtered_variant(variant, count)
Outputs a summary of the filtered variant to \fIhandle\fP. Internal filter 
names are converted to messages using the \fBDataContainer._filter_messages\fP 
dictionary. Related to \fBSeqLib.report_filtered()\fP.
.UNINDENT
.UNINDENT
.SS Inheritance diagram for \fBSeqLib\fP derived classes
.SH SELECTION --- CLASS FOR ANALYZING A SELECTION TIMESERIES
.sp
The \fBselection\fP module contains the class definition for the \fBSelection\fP class, used for analyzing multiple timepoints in a selection experiment. Each timepoint consists of one or more \fI\%Seqlib family objects\fP.
.SS Configuration options
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqlibraries\(aq\fP \- \fIrequired\fP
List of \fBSeqLib\fP config objects for sequencing libraries that are part of this \fBSelection\fP.
.TP
.B \fB\(aqbarcodes\(aq\fP
Barcode options.
.INDENT 7.0
.TP
.B \fB\(aqmap file\(aq\fP
Path to the \fBBarcodeMap\fP file mapping barcodes to variant sequences. This \fBBarcodeMap\fP will be used for any \fBBarcodeVariantSeqLib\fP libraries that do not have their own specified.
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for barcodes and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin count\(aq\fP
Minimum count for this barcode or variant at any timepoint.
.TP
.B \fB\(aqmin input count\(aq\fP
Minimum count for this barcode or variant in the input (timepoint 0).
.TP
.B \fB\(aqmin rsquared\(aq\fP
Minimum r\-squared value for scored variants and barcodes.
.TP
.B \fB\(aqmax barcode variation\(aq\fP
Maximum coefficient of variation for barcode scores mapped to the same variant. This is only applied when only when all sequencing data has both barcode and variant data (\fIi.e.\fP are \fBBarcodeVariantSeqLib\fP objects) with the same \fBBarcodeMap\fP.
.UNINDENT
.TP
.B \fB\(aqcarryover correction\(aq\fP
Nonspecific carryover correction options.
.INDENT 7.0
.TP
.B \fB\(aqmethod\(aq\fP
Nonspecific carryover correction method. Currently, only "nonsense" is supported (described in \fI\%Araya and Fowler\fP).
.TP
.B \fB\(aqposition\(aq\fP
Additional parameterd for "nonsense" method. This is the last amino acid position (first position is 1) for which a change to stop marks a variant as part of nonspecific carryover.
.UNINDENT
.TP
.B \fB\(aqnormalize wt\(aq\fP
If this is \fBTrue\fP, normalize all scores or ratios using the wild type score or ratio as neutral.
.UNINDENT
.SS \fBSelection\fP class
.INDENT 0.0
.TP
.B class selection.Selection(config)
Class for a single selection experiment, consisting of multiple 
timepoints. This class coordinates \fBSeqLib\fP 
objects. Creating a \fBSelection\fP requires a valid 
\fIconfig\fP object, usually from a \fB.json\fP configuration file.
.INDENT 7.0
.TP
.B add_variants_to_barcodes()
Add the associated variant information to each row of the barcode \fI\%pandas.DataFrame\fP.
.UNINDENT
.INDENT 7.0
.TP
.B calc_barcode_variation()
Calculate the \fI\%coefficient of variation\fP 
for each variant\(aqs barcode enrichment scores. Requires both variant and barcode 
data for all timepoints.
.UNINDENT
.INDENT 7.0
.TP
.B calc_counts(dtype)
Tabulate counts for each timepoint and create the \fI\%pandas.DataFrame\fP indicated by 
\fIdtype\fP. All \fBSeqLib\fP objects need to be counted before calling 
this method.
.UNINDENT
.INDENT 7.0
.TP
.B calc_enrichments(dtype)
Calculate enrichment scores and r\-squared values for each element in the \fI\%pandas.DataFrame\fP indicated by 
\fIdtype\fP (\(aqvariant\(aq or \(aqbarcode\(aq). Assumes ratios have been 
calculated by \fBcalc_ratios()\fP. Calculations performed using 
\fBlinear_enrichment_apply_fn()\fP.
.UNINDENT
.INDENT 7.0
.TP
.B calc_frequencies(dtype)
Calculate frequencies for each element in the \fI\%pandas.DataFrame\fP indicated by 
\fIdtype\fP (\(aqvariant\(aq or \(aqbarcode\(aq).
.UNINDENT
.INDENT 7.0
.TP
.B calc_ratios(dtype)
Calculate ratios for each element in the \fI\%pandas.DataFrame\fP indicated by 
\fIdtype\fP (\(aqvariant\(aq or \(aqbarcode\(aq). Assumes frequencies have been 
calculated by \fBcalc_frequencies()\fP.
.UNINDENT
.INDENT 7.0
.TP
.B calculate()
Wrapper method to calculate counts, frequencies, ratios, and enrichment scores 
for all data in the \fBSelection\fP. Enrichment scores are only calculated 
if there are more than two timepoints.
.UNINDENT
.INDENT 7.0
.TP
.B count_mutations()
Creates and populates \fI\%pandas.DataFrame\fP objects for individual mutations. This method 
should be called after all filtering has been completed. The new 
\fI\%pandas.DataFrame\fP objects have dtype \(aqmutations_nt\(aq and \(aqmutations_aa\(aq (only if the 
data set is coding).
.UNINDENT
.INDENT 7.0
.TP
.B count_timepoints()
Combine \fBSeqLib\fP objects into individual timepoints and 
tabulate counts for each timepoint. Counts are stored in the local
\fI\%pandas.DataFrame\fP. To tabulate counts for individual mutations 
(not variants), see \fBcount_mutations()\fP.
.UNINDENT
.INDENT 7.0
.TP
.B filter_variant_data()
Apply the filtering functions to the variant data, based on the filter 
options present in the configuration object. Filtering is performed 
using the appropriate apply function. Frequencies, ratios, and 
enrichments must be recalculated after filtering.
.sp
The data are written to the subdirectory \fB"pre\-filter"\fP before filtering.
.UNINDENT
.INDENT 7.0
.TP
.B library_list()
Return the \fBSeqLib\fP objects as a list, sorted by timepoint.
.UNINDENT
.INDENT 7.0
.TP
.B nonspecific_carryover(ns_apply_fn, **kwargs)
Correct the counts in the \(aqvariants\(aq \fI\%pandas.DataFrame\fP for nonspecific carryover. 
Nonspecific counts are defined by \fIns_apply_fn\fP and its \fIkwargs\fP, which 
takes a row as an argument and returns \fBTrue\fP if the row\(aqs counts 
are nonspecific.
.UNINDENT
.INDENT 7.0
.TP
.B normalize_variants_to_wt()
Normalizes variant scores (or ratios if only two timepoints are present) such that the wild type value is "neutral" (0 for scores, 1 for ratios). Does nothing for barcode\-only data.
.sp
The data are written to the subdirectory \fB"pre\-wtnorm"\fP before normalization.
.UNINDENT
.INDENT 7.0
.TP
.B use_scores()
Return \fBTrue\fP if scores (slopes) are used, else \fBFalse\fP (use ratios).
.UNINDENT
.UNINDENT
.SS \fBselection\fP apply functions
.INDENT 0.0
.TP
.B selection.nonsense_ns_carryover_apply_fn(row, position)
\fI\%pandas.DataFrame.apply()\fP function for determining which rows 
contribute counts to nonspecific carryover calculations. Returns \fBTrue\fP 
if the variant has a change to stop at or before amino acid number 
\fIposition\fP.
.UNINDENT
.SS Filtering apply functions
.INDENT 0.0
.TP
.B selection.min_count_filter(row, cutoff)
Filtering function for minimum counts across all timepoints.
.UNINDENT
.INDENT 0.0
.TP
.B selection.min_input_count_filter(row, cutoff)
Filtering function for minimum count in input timepoint.
.UNINDENT
.INDENT 0.0
.TP
.B selection.min_rsq_filter(row, cutoff)
Filtering function for minimum r\-squared value. Entries with no 
r\-squared value are retained.
.UNINDENT
.SS \fBBarcodeVariant\fP\-specific apply functions
.INDENT 0.0
.TP
.B selection.barcode_variation_apply_fn(row, barcode_data, mapping)
\fI\%pandas.DataFrame.apply()\fP function for calculating the coefficient 
of variation for a variant\(aqs barcodes.
.UNINDENT
.INDENT 0.0
.TP
.B selection.barcode_count_apply_fn(row, mapping)
\fI\%pandas.DataFrame.apply()\fP function for counting the number of 
unique barcodes for a variant.
.UNINDENT
.INDENT 0.0
.TP
.B selection.barcode_varation_filter(row, cutoff)
Filtering function for barcode coefficient of variation.
.UNINDENT
.SH EXPERIMENT --- CLASS FOR COMPARING MULTIPLE SELECTIONS
.sp
The \fBexperiment\fP module contains the class definition for the \fBExperiment\fP class, used for comparing multiple \fBSelection\fP objects. Typically, one \fBExperiment\fP will be created to perform all analysis for a single run of the \fI\%Enrich2\fP pipeline.
.SS Configuration options
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqconditions\(aq\fP \- \fIrequired\fP
List of experimental conditions, each having the following format.
.INDENT 7.0
.TP
.B \fB\(aqlabel\(aq\fP \- \fIrequired\fP
Label for the condition. Must be unique and alphanumeric.
.TP
.B \fB\(aqselection\(aq\fP \- \fIrequired\fP
List of \fBSelection\fP config objects for selection performed under this condition.
.TP
.B \fB\(aqcontrol\(aq\fP
If this is \fBTrue\fP, this condition will be treated as the control for normalization purposes. Only one control condition may be specified.
.UNINDENT
.TP
.B \fB\(aqnormalize wt\(aq\fP
If this is \fBTrue\fP, normalize all scores or ratios using the wild type score or ratio as neutral.
.UNINDENT
.SS \fBExperiment\fP class
.INDENT 0.0
.TP
.B class experiment.Experiment(config)
Class for a coordinating multiple \fBSelection\fP 
objects. Creating an 
\fBExperiment\fP requires a valid \fIconfig\fP object, 
usually from a \fB.json\fP configuration file.
.INDENT 7.0
.TP
.B calc_variation()
Calculate the coefficient of variation for each variant\(aqs scores or ratios in each condition.
.UNINDENT
.INDENT 7.0
.TP
.B calculate()
Calculate scores for all \fBSelection\fP objects.
.UNINDENT
.INDENT 7.0
.TP
.B filter_data()
Apply the filtering functions to the data, based on the filter 
options present in the configuration object. Filtering is performed 
using the appropriate apply function.
.UNINDENT
.INDENT 7.0
.TP
.B selection_list()
Return the \fBSelection\fP objects as a list.
.UNINDENT
.INDENT 7.0
.TP
.B use_scores()
Return \fBTrue\fP if scores (slopes) are used, else \fBFalse\fP (use ratios).
.UNINDENT
.UNINDENT
.SS \fBexperiment\fP apply functions
.INDENT 0.0
.TP
.B experiment.condition_cv_apply_fn(row, condition, use_scores)
\fI\%pandas.DataFrame.apply()\fP function for calculating the 
coefficient of variation for a variant\(aqs score (or ratio) in the 
condition.
.UNINDENT
.SH OTHER MODULES
.SS \fBfqread\fP \-\-\- Manipulation of FASTQ records
.sp
The \fBfqread\fP module contains the \fBFQRead\fP class for storing and manipulating \fI\%FASTQ\fP records, and associated utility functions for reading these data from standard files.
.SS \fBFQRead\fP class
.INDENT 0.0
.TP
.B class fqread.FQRead(header, sequence, header2, quality, qbase=33)
Stores a single record from a \fI\%FASTQ\fP file. Quality values are stored 
internally as a list of integer \fI\%Phred quality scores\fP. The \fIqbase\fP parameter is 
the ASCII value that correponds to Phred score of 0. The \fIsequence\fP and 
\fIquality\fP strings must be the same length.
.INDENT 7.0
.TP
.B __len__()
Object length is the length of the sequence.
.UNINDENT
.INDENT 7.0
.TP
.B __str__()
Reformat as a four\-line \fI\%FASTQ\fP record. This method converts the 
integer quality values back into a string.
.UNINDENT
.INDENT 7.0
.TP
.B header_information(pattern=header_pattern)
Parses the first \fI\%FASTQ\fP header (@ header) and returns a dictionary. 
Dictionary keys are the named groups in the regular expression 
\fIpattern\fP. Unnamed matches are ignored. Integer values are converted 
from strings to integers.
.sp
The default pattern matches a header in the format:
.sp
.nf
.ft C
@<MachineName>:<Lane>:<Tile>:<X>:<Y>:<Chastity>#<IndexRead>/<ReadNumber>
.ft P
.fi
.UNINDENT
.INDENT 7.0
.TP
.B is_chaste()
Returns \fBTrue\fP if the chastity bit is set in the header. The 
regular experession used by \fBheader_information()\fP must  
include a \fB\(aqChastity\(aq\fP match that equals \fB1\fP if the read is 
chaste.
.UNINDENT
.INDENT 7.0
.TP
.B mean_quality()
Return the average Phred\-like quality score.
.UNINDENT
.INDENT 7.0
.TP
.B min_quality()
Return the minimum Phred\-like quality score.
.UNINDENT
.INDENT 7.0
.TP
.B revcomp()
Reverse\-complement the sequence in place. Also reverses the array of 
quality values.
.UNINDENT
.INDENT 7.0
.TP
.B trim(start=1, end=None)
Trims this \fBFQRead\fP to contain bases between 
\fIstart\fP and \fIend\fP (inclusive). Bases are numbered starting at 1.
.UNINDENT
.INDENT 7.0
.TP
.B trim_length(length, start=1)
Trims this \fBFQRead\fP to contain \fIlength\fP bases, 
beginning with \fIstart\fP. Bases are numbered starting at 1.
.UNINDENT
.UNINDENT
.SS Generator functions
.sp
The \fBfqread\fP module provides two generators (functions that return iterators) for reading records from \fI\%FASTQ\fP files. Input files are read in chunks to improve performance by minimizing disk accesses.
.INDENT 0.0
.TP
.B fqread.read_fastq(fname, filter_function=None, buffer_size=100000, qbase=33)
Generator function for reading from \fI\%FASTQ\fP file \fIfname\fP. Yields an 
\fBFQRead\fP object for each \fI\%FASTQ\fP record in the file. The 
\fIfilter_function\fP must operate on an \fBFQRead\fP object 
and return \fBTrue\fP or \fBFalse\fP. If the result is \fBFalse\fP, the record 
will be skipped silently.
.IP Note
To read multiple files in parallel (such as index or         forward/reverse reads), use \fBread_fastq_multi()\fP instead.
.RE
.UNINDENT
.INDENT 0.0
.TP
.B fqread.read_fastq_multi(fnames, filter_function=None, buffer_size=100000, match_lengths=True, qbase=33)
Generator function for reading from multiple \fI\%FASTQ\fP files in parallel. 
The argument \fIfnames\fP is an iterable of \fI\%FASTQ\fP file names. Yields a 
tuple of \fBFQRead\fP objects, one for each file in 
\fIfnames\fP. The \fIfilter_function\fP must operate on an \fBFQRead\fP 
object and return \fBTrue\fP or \fBFalse\fP. If the result is \fBFalse\fP for 
any \fBFQRead\fP in the tuple, the entire tuple will be skipped.
.sp
If \fImatch_lengths\fP is \fBTrue\fP, the generator will yield \fBNone\fP if the 
files do not contain the same number of \fI\%FASTQ\fP records. Otherwise, it 
will silently ignore partial records.
.UNINDENT
.SS Miscellaneous functions
.INDENT 0.0
.TP
.B fqread.check_fastq(fname)
Check that \fIfname\fP exists and has a valid \fI\%FASTQ\fP file extension. Valid 
file extensions are \fB.fastq\fP or \fB.fq\fP, optionally followed by \fB.gz\fP 
or \fB.bz2\fP if the file is compressed. Returns the compression format 
(\fB"gz"\fP, \fB"bz2"\fP, or \fBNone\fP) if the file exists and the extension 
is recognized, otherwise raise an \fBIOError\fP.
.UNINDENT
.INDENT 0.0
.TP
.B fqread.fastq_filter_chastity(fq)
Filtering function for \fBread_fastq()\fP and 
\fBread_fastq_multi()\fP. Returns \fBTrue\fP if the 
\fBFQRead\fP object \fIfq\fP is chaste.
.UNINDENT
.SS \fBaligner\fP \-\-\- Needleman\-Wunsch alignment for variants
.sp
The \fBaligner\fP module contains a \fI\%Needleman\-Wunsch\fP aligner
used by \fBVariantSeqLib\fP objects to align variants
to the wild type sequence.
.IP Note
This module uses Python\(aqs \fBException\fP instead of \fBEnrichError\fP for portability.
.RE
.SS \fBAligner\fP class
.INDENT 0.0
.TP
.B class seqlib.aligner.Aligner(similarity=_simple_similarity)
Class for performing \fI\%Needleman\-Wunsch\fP local alignment.
.sp
The \fBAligner\fP requires a scoring matrix when 
created. By default, the following matrix is used:
.sp
.nf
.ft C
_simple_similarity = {
        \(aqA\(aq : {\(aqA\(aq : 1, \(aqC\(aq : \-1, \(aqG\(aq : \-1, \(aqT\(aq : \-1, \(aqN\(aq : 0, \(aqX\(aq : 0},
        \(aqC\(aq : {\(aqA\(aq : \-1, \(aqC\(aq : 1, \(aqG\(aq : \-1, \(aqT\(aq : \-1, \(aqN\(aq : 0, \(aqX\(aq : 0},
        \(aqG\(aq : {\(aqA\(aq : \-1, \(aqC\(aq : \-1, \(aqG\(aq : 1, \(aqT\(aq : \-1, \(aqN\(aq : 0, \(aqX\(aq : 0},
        \(aqT\(aq : {\(aqA\(aq : \-1, \(aqC\(aq : \-1, \(aqG\(aq : \-1, \(aqT\(aq : 1, \(aqN\(aq : 0, \(aqX\(aq : 0},
        \(aqN\(aq : {\(aqA\(aq : 0, \(aqC\(aq : 0, \(aqG\(aq : 0, \(aqT\(aq : 0, \(aqN\(aq : 0, \(aqX\(aq : 0},
        \(aqX\(aq : {\(aqA\(aq : 0, \(aqC\(aq : 0, \(aqG\(aq : 0, \(aqT\(aq : 0, \(aqN\(aq : 0, \(aqX\(aq : 0},
        \(aqgap\(aq : \-1
}

.ft P
.fi
.sp
The format is a nested dictionary, with a special \fB\(aqgap\(aq\fP entry for the 
gap penalty (this value is used for both gap opening and gap extension). 
The \fB\(aqX\(aq\fP nucleotide is a special case for unresolvable mismatches in 
\fBOverlapSeqLib\fP variant data.
.INDENT 7.0
.TP
.B align(seq1, seq2)
Aligns the two sequences, \fIseq1\fP and \fIseq2\fP and returns a list of 
tuples describing the differences between the sequences.
.sp
The tuple format is \fB(i, j, type, length)\fP, where \fBi\fP and \fBj\fP 
are the positions in \fIseq1\fP and \fIseq2\fP, respectively, and type is one 
of \fB"match"\fP, \fB"mismatch"\fP, \fB"insertion"\fP, or \fB"deletion"\fP. 
For indels, the \fBlength\fP value is the number of bases inserted or 
deleted with respect to \fIseq1\fP starting at \fBi\fP.
.UNINDENT
.UNINDENT
.SS \fBenrich_error\fP \-\-\- Error handling for Enrich2
.INDENT 0.0
.TP
.B exception enrich_error.EnrichError(value, name)
Exception class for errors in the Enrich2 project.
.UNINDENT
.INDENT 0.0
.TP
.B class enrich_error.EnrichMessage(message)
Class for warning messages in the Enrich2 project.
.IP Warning
Not currently used.
.RE
.UNINDENT
.SH LIST OF EXAMPLE CONFIGURATION FILES
.SS \fBBasicSeqLib\fP
.sp
JSON source: \fBbasic.json\fP
.sp
.nf
.ft C
{
  "name" : "Sample Basic Library",
  "timepoint" : 0,
  "wild type" : {
    "sequence" : "CGACGCAAGGAGTAG",
    "coding" : true
  },
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_reads.fq"
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true,
    "max mutations" : 4
  }
}

.ft P
.fi
.SS \fBOverlapSeqLib\fP
.sp
JSON source: \fBoverlap.json\fP
.sp
.nf
.ft C
{
  "name" : "Sample Overlap Library",
  "timepoint" : 0,
  "wild type" : {
    "sequence" : "CGACGCAAGGAGTAG",
    "coding" : true
  },
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_forward_reads.fq",
    "reverse" : "/path/to/FASTQ/sample_reverse_reads.fq"
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true,
    "max mutations" : 4
  },
  "overlap" : {
    "forward start" : 3,
    "reverse start" : 5,
    "length" : 9,
    "overlap only" : false,
    "max mismatches" : 5
  }
}

.ft P
.fi
.SS \fBBarcodeSeqLib\fP
.sp
JSON source: \fBbarcode.json\fP
.sp
.nf
.ft C
{
  "name" : "Sample Barcode Library",
  "timepoint" : 0,
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_reads.fq",
    "start" : 1,
    "length" : 16
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true
  },
  "barcodes" : {
    "min count" : 5
  }
}

.ft P
.fi
.SS \fBBarcodeVariantSeqLib\fP
.sp
JSON source: \fBbarcodevariant.json\fP
.sp
.nf
.ft C
{
  "name" : "Sample Barcode Library",
  "timepoint" : 0,
  "wild type" : {
    "sequence" : "CGACGCAAGGAGTAG",
    "coding" : true
  },
  "fastq" : {
    "forward" : "/path/to/FASTQ/sample_reads.fq",
    "start" : 1,
    "length" : 16
  },
  "filters" : {
    "min quality" : 20,
    "avg quality" : 20,
    "chastity" : true,
    "max mutations" : 4
  },
  "barcodes" : {
    "map file" : "/path/to/map/file/barcode_map.txt"
  }
}

.ft P
.fi
.SS \fBSelection\fP
.sp
JSON source: \fBselection.json\fP
.sp
.nf
.ft C
{
  "name" : "Sample Experimental Condition",
  "filters" : {
    "min count" : 10,
    "min input count" : 50,
    "min rsquared" : 0.2,
    "max barcode variation" : 3.0
  },
  "carryover correction" : "nonsense",
  "libraries" : [
    {
      "name" : "Sample Input",
      "timepoint" : 0,
      "wild type" : {
        "sequence" : "CGACGCAAGGAGTAG",
        "coding" : true
      },
      "fastq" : {
        "forward" : "/path/to/FASTQ/condition1/input_reads.fq",
        "start" : 1,
        "length" : 16
      },
      "filters" : {
        "min quality" : 20,
        "avg quality" : 20,
        "chastity" : true,
        "max mutations" : 4
      },
      "barcodes" : {
        "map file" : "/path/to/map/file/barcode_map.txt"
      }
    },
    {
      "name" : "Sample 24hr",
      "timepoint" : 24,
      "wild type" : {
        "sequence" : "CGACGCAAGGAGTAG",
        "coding" : true
      },
      "fastq" : {
        "forward" : "/path/to/FASTQ/condition1/t24_reads.fq",
        "start" : 1,
        "length" : 16
      },
      "filters" : {
        "min quality" : 20,
        "avg quality" : 20,
        "chastity" : true,
        "max mutations" : 4
      },
      "barcodes" : {
        "map file" : "/path/to/map/file/barcode_map.txt"
      }
    },
    {
      "name" : "Sample 48hr",
      "timepoint" : 48,
      "wild type" : {
        "sequence" : "CGACGCAAGGAGTAG",
        "coding" : true
      },
      "fastq" : {
        "forward" : "/path/to/FASTQ/condition1/t48_reads.fq",
        "start" : 1,
        "length" : 16
      },
      "filters" : {
        "min quality" : 20,
        "avg quality" : 20,
        "chastity" : true,
        "max mutations" : 4
      },
      "barcodes" : {
        "map file" : "/path/to/map/file/barcode_map.txt"
      }
    }
  ]
}

.ft P
.fi
.SS \fBExperiment\fP
.sp
JSON source: \fBexperiment.json\fP
.sp
.nf
.ft C
{
  "name" : "Sample Experiment",
  "conditions" : [
    {
      "label" : "normal",
      "control" : false,
      "selections" : [
        {
          "name" : "Sample Experimental Condition",
          "filters" : {
            "min count" : 10,
            "min input count" : 50,
            "min rsquared" : 0.2,
            "max barcode variation" : 3.0
          },
          "carryover correction" : "nonsense",
          "libraries" : [
            {
              "name" : "Sample Input",
              "timepoint" : 0,
              "wild type" : {
                "sequence" : "CGACGCAAGGAGTAG",
                "coding" : true
              },
              "fastq" : {
                "forward" : "/path/to/FASTQ/condition1/input_reads.fq",
                "start" : 1,
                "length" : 16
              },
              "filters" : {
                "min quality" : 20,
                "avg quality" : 20,
                "chastity" : true,
                "max mutations" : 4
              },
              "barcodes" : {
                "map file" : "/path/to/map/file/barcode_map.txt"
              }
            },
            {
              "name" : "Sample 24hr",
              "timepoint" : 24,
              "wild type" : {
                "sequence" : "CGACGCAAGGAGTAG",
                "coding" : true
              },
              "fastq" : {
                "forward" : "/path/to/FASTQ/condition1/t24_reads.fq",
                "start" : 1,
                "length" : 16
              },
              "filters" : {
                "min quality" : 20,
                "avg quality" : 20,
                "chastity" : true,
                "max mutations" : 4
              },
              "barcodes" : {
                "map file" : "/path/to/map/file/barcode_map.txt"
              }
            },
            {
              "name" : "Sample 48hr",
              "timepoint" : 48,
              "wild type" : {
                "sequence" : "CGACGCAAGGAGTAG",
                "coding" : true
              },
              "fastq" : {
                "forward" : "/path/to/FASTQ/condition1/t48_reads.fq",
                "start" : 1,
                "length" : 16
              },
              "filters" : {
                "min quality" : 20,
                "avg quality" : 20,
                "chastity" : true,
                "max mutations" : 4
              },
              "barcodes" : {
                "map file" : "/path/to/map/file/barcode_map.txt"
              }
            }
          ]
        }
      ]
    },
    {
      "label" : "drift control",
      "control" : true,
      "selections" : [
        {
          "name" : "Sample Drift Control",
          "filters" : {
            "min count" : 10,
            "min input count" : 50,
            "min rsquared" : 0.2,
            "max barcode variation" : 3.0
          },
          "carryover correction" : "nonsense",
          "libraries" : [
            {
              "name" : "Sample Control Input",
              "timepoint" : 0,
              "wild type" : {
                "sequence" : "CGACGCAAGGAGTAG",
                "coding" : true
              },
              "fastq" : {
                "forward" : "/path/to/FASTQ/control/input_reads.fq",
                "start" : 1,
                "length" : 16
              },
              "filters" : {
                "min quality" : 20,
                "avg quality" : 20,
                "chastity" : true,
                "max mutations" : 4
              },
              "barcodes" : {
                "map file" : "/path/to/map/file/barcode_map.txt"
              }
            },
            {
              "name" : "Sample Control 24hr",
              "timepoint" : 24,
              "wild type" : {
                "sequence" : "CGACGCAAGGAGTAG",
                "coding" : true
              },
              "fastq" : {
                "forward" : "/path/to/FASTQ/control/t24_reads.fq",
                "start" : 1,
                "length" : 16
              },
              "filters" : {
                "min quality" : 20,
                "avg quality" : 20,
                "chastity" : true,
                "max mutations" : 4
              },
              "barcodes" : {
                "map file" : "/path/to/map/file/barcode_map.txt"
              }
            },
            {
              "name" : "Sample Control 48hr",
              "timepoint" : 48,
              "wild type" : {
                "sequence" : "CGACGCAAGGAGTAG",
                "coding" : true
              },
              "fastq" : {
                "forward" : "/path/to/FASTQ/control/t48_reads.fq",
                "start" : 1,
                "length" : 16
              },
              "filters" : {
                "min quality" : 20,
                "avg quality" : 20,
                "chastity" : true,
                "max mutations" : 4
              },
              "barcodes" : {
                "map file" : "/path/to/map/file/barcode_map.txt"
              }
            }
          ]
        }
      ]
    }
  ]
}

.ft P
.fi
.SH ENRICH2 PROJECT TO DO LIST
.SS Debugging
.sp
Write test datasets
.INDENT 0.0
.IP \(bu 2
\fBFQRead\fP
.IP \(bu 2
trim_fastq.py
.IP \(bu 2
split_fastq.py
.IP \(bu 2
\fBBarcodeSeqLib\fP
.IP \(bu 2
\fBBasicSeqLib\fP
.IP \(bu 2
\fBOverlapSeqLib\fP
.IP \(bu 2
\fBBarcodeVariantSeqLib\fP
.IP \(bu 2
\fBSelection\fP
.IP \(bu 2
\fBExperiment\fP
.UNINDENT
.SS Implementation \- High Priority
.sp
Make a pass for adding additional status messages
.sp
Add basic plotting functions
.INDENT 0.0
.IP \(bu 2
.INDENT 2.0
.TP
.B \fBSeqLib\fP
.INDENT 7.0
.IP \(bu 2
Diversity heatmap
.UNINDENT
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fBSelection\fP
.INDENT 7.0
.IP \(bu 2
Sequence\-function map
.UNINDENT
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fBExperiment\fP
.INDENT 7.0
.IP \(bu 2
Sequence\-function map
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Implement replicate comparison \fB[experiment.py]\fP
.sp
Implement control\-based correction \fB[experiment.py]\fP
.sp
Implement filtering \fB[experiment.py]\fP
.SS Implementation \- Low Priority
.sp
Extend logging to use multiple files (specifically to support sending filtered reads to their own output file)
.sp
Define a custom logging message formatting \- "root" is unnecessary and confusing \fB[enrich.py]\fP
.sp
Polish pass through \fBimport\fP statements
.sp
Add multithreading to library read stage (one thread per SeqLib to speed up file I/O step)
.sp
More advanced management of peak memory usage
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Maximum size of barcode dictionary before being dumped to disk to a (key\-sorted) temp file, then merge the counts from the temp files.
.IP \(bu 2
For barcode_map barcodes, perform the barcode_map\-based filtering at each threshold, then resolve merging the unmapped barcodes in the temp files.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Documentation
.sp
Document logging behaviour (message types output at \fBINFO\fP, \fBDEBUG\fP levels) and standard log message format:
.sp
.nf
.ft C
Capitalized message [self.name]
.ft P
.fi
.sp
Bare \fB.html\fP landing page for the documentation
.sp
Better description of the output file structure (especially \fIsubdirectory\fP for \fBwrite_data()\fP)
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP or \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Only one \fI\%FASTQ\fP file may be specified. If the file is \(aqreverse\(aq, all reads will be reverse\-complemented before variants are called.
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP  \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that the read has the chastity bit set in the \fI\%FASTQ\fP header.
.TP
.B \fB\(aqmax mutations\(aq\fP
Maximum number of mutations allowed for the variant.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP and \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Both \fI\%FASTQ\fP files must be specified. All reads in the \(aqreverse\(aq file will be reverse\-complemented during the merging process.
.UNINDENT
.TP
.B \fB\(aqoverlap\(aq\fP \- \fIrequired\fP
Information about how the forward and reverse reads should be combined.
.INDENT 7.0
.TP
.B \fB\(aqforward start\(aq\fP \- \fIrequired\fP
Position in the forward read (first base is position 1) where the overlapping region begins.
.TP
.B \fB\(aqreverse start\(aq\fP \- \fIrequired\fP
Position in the reverse read (first base is position 1) where the overlapping region begins. This is the position in the read before reverse\-complementing.
.TP
.B \fB\(aqlength\(aq\fP \- \fIrequired\fP
Number of bases in the overlaping region.
.UNINDENT
.TP
.B \fB\(aqoverlap only\(aq\fP \- \fIrequired\fP
If this option is \fBTrue\fP, the portions of the read that are outside the overlapping region will be trimmed before calling variants. Otherwise, the portion of the forward read before the overlapping region and the portion of the reverse read after the overlapping region are included in the variant sequence.
.TP
.B \fB\(aqmax mismatches\(aq\fP \- \fIrequired\fP
The maximum number of mismatches tolerated in the overlapping region.
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the merged read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the merged read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that both forward and reverse reads have the chastity bit set in their \fI\%FASTQ\fP headers.
.TP
.B \fB\(aqmax mutations\(aq\fP
Maximum number of mutations allowed for the variant.
.TP
.B \fB\(aqremove unresolvable\(aq\fP
Remove merged reads with unresolvable mismatches (different nucleotides with the same quality score at the same position).
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP or \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Only one \fI\%FASTQ\fP file may be specified. If the file is \(aqreverse\(aq, all reads will be reverse\-complemented before barcodes are counted.
.TP
.B \fB\(aqstart\(aq\fP
Starting position of the barcode in the read (first base is position 1). Used for optional read trimming.
.TP
.B \fB\(aqlength\(aq\fP
Number of bases in the barcode. Used for optional read trimming.
.UNINDENT
.TP
.B \fB\(aqbarcodes\(aq\fP \- \fIrequired\fP
This config option must be present for the sequences to be treated as barcodes, even if it has no elements in it.
.INDENT 7.0
.TP
.B \fB\(aqmin count\(aq\fP
Minimum count for a barcode to be included in the analysis. Barcodes with counts below this threshold will be output as low abundance barcodes, then discarded.
.IP Note
Use of this option is strongly encouraged to limit the amount of memory required for the analysis.
.RE
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that the read has the chastity bit set in the \fI\%FASTQ\fP header.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqtimepoint\(aq\fP \- \fIrequired\fP
Integer timepoint for this sequencing library. This can indicate time at which timepoints were taken (in hours, days, etc.) or the number of rounds of selection. The input library must be timepoint 0. Multiple sequencing libraries with the same timepoint will be combined by \fBSelection\fP.
.TP
.B \fB\(aqreport filtered reads\(aq\fP
If this is \fBTrue\fP, reads that are filtered out will be written to the log file, along with a message about which filters they failed.
.IP Note
Enabling this option can generate very large log files, and it is recommended that it should only be used for troubleshooting subsets of the data.
.RE
.TP
.B \fB\(aqwild type\(aq\fP \- \fIrequired\fP
Information about the wild type sequence for this sequencing library.
.INDENT 7.0
.TP
.B \fB\(aqsequence\(aq\fP \- \fIrequired\fP
The wild type DNA sequence. The sequence should be the same length as the sequences being compared to it (after any merging or read trimming).
.TP
.B \fB\(aqcoding\(aq\fP \- \fIrequired\fP
Set to \fBTrue\fP if the wild type sequence codes for protein. If this is \fBTrue\fP, amino acid changes will be computed for all variants. The wild type sequence must be in\-frame.
.TP
.B \fB\(aqreference offset\(aq\fP
If this integer option is set, the value will be added to the DNA position (with respect to the wild type sequence) of each variant called. This is used to indicate the position of the mutagenized region within a longer sequence (mRNA, chromosome, etc.).
.UNINDENT
.TP
.B \fB\(aqalign variants\(aq\fP
Set to \fBTrue\fP to use the \fBAligner\fP to align variants that have too many mutations or an unexpected length. Calls indels as well as single nucleotide changes.
.IP Note
Alignment is typically disabled for performance reasons unless the user is interested in indel mutations.
.RE
.TP
.B \fB\(aqfastq\(aq\fP \- \fIrequired\fP
Information about the \fI\%FASTQ\fP file.
.INDENT 7.0
.TP
.B \fB\(aqforward\(aq\fP or \fB\(aqreverse\(aq\fP \- \fIrequired\fP
Only one \fI\%FASTQ\fP file may be specified. If the file is \(aqreverse\(aq, all reads will be reverse\-complemented before barcodes are counted.
.TP
.B \fB\(aqstart\(aq\fP
Starting position of the barcode in the read (first base is position 1). Used for optional read trimming.
.TP
.B \fB\(aqlength\(aq\fP
Number of bases in the barcode. Used for optional read trimming.
.UNINDENT
.TP
.B \fB\(aqbarcodes\(aq\fP \- \fIrequired\fP
This config option must be present for the sequences to be treated as barcodes, even if it has no elements in it.
.INDENT 7.0
.TP
.B \fB\(aqmap file\(aq\fP
Path to the \fBBarcodeMap\fP file mapping barcodes to variant sequences. If this option is not set, the \fBBarcodeMap\fP from the \fBSelection\fP will be used.
.TP
.B \fB\(aqmin count\(aq\fP
Minimum count for a barcode to be included in the analysis. Barcodes with counts below this threshold will be output as low abundance barcodes, then discarded.
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for reads and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin quality\(aq\fP
Minimum quality value for all bases in the read.
.TP
.B \fB\(aqavg quality\(aq\fP
Minimum average quality value for the read.
.TP
.B \fB\(aqchastity\(aq\fP
If \fBTrue\fP, require that the read has the chastity bit set in the \fI\%FASTQ\fP header.
.TP
.B \fB\(aqmax mutations\(aq\fP
Maximum number of mutations allowed for the variant.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqlibraries\(aq\fP \- \fIrequired\fP
List of \fBSeqLib\fP config objects for sequencing libraries that are part of this \fBSelection\fP.
.TP
.B \fB\(aqbarcodes\(aq\fP
Barcode options.
.INDENT 7.0
.TP
.B \fB\(aqmap file\(aq\fP
Path to the \fBBarcodeMap\fP file mapping barcodes to variant sequences. This \fBBarcodeMap\fP will be used for any \fBBarcodeVariantSeqLib\fP libraries that do not have their own specified.
.UNINDENT
.TP
.B \fB\(aqfilters\(aq\fP \- \fIrequired\fP
Filtering options for barcodes and variants.
.INDENT 7.0
.TP
.B \fB\(aqmin count\(aq\fP
Minimum count for this barcode or variant at any timepoint.
.TP
.B \fB\(aqmin input count\(aq\fP
Minimum count for this barcode or variant in the input (timepoint 0).
.TP
.B \fB\(aqmin rsquared\(aq\fP
Minimum r\-squared value for scored variants and barcodes.
.TP
.B \fB\(aqmax barcode variation\(aq\fP
Maximum coefficient of variation for barcode scores mapped to the same variant. This is only applied when only when all sequencing data has both barcode and variant data (\fIi.e.\fP are \fBBarcodeVariantSeqLib\fP objects) with the same \fBBarcodeMap\fP.
.UNINDENT
.TP
.B \fB\(aqcarryover correction\(aq\fP
Nonspecific carryover correction options.
.INDENT 7.0
.TP
.B \fB\(aqmethod\(aq\fP
Nonspecific carryover correction method. Currently, only "nonsense" is supported (described in \fI\%Araya and Fowler\fP).
.TP
.B \fB\(aqposition\(aq\fP
Additional parameterd for "nonsense" method. This is the last amino acid position (first position is 1) for which a change to stop marks a variant as part of nonspecific carryover.
.UNINDENT
.TP
.B \fB\(aqnormalize wt\(aq\fP
If this is \fBTrue\fP, normalize all scores or ratios using the wild type score or ratio as neutral.
.UNINDENT
.INDENT 0.0
.TP
.B \fB\(aqname\(aq\fP  \- \fIrequired\fP
The name of this entity. This used for output directory names, and is included in every error message and log message. Names should be unique within a single analysis, but this is not enforced.
.TP
.B \fB\(aqoutput directory\(aq\fP
Sets the base output directory for the analysis. Output files and directories will be created in subdirectories at this location. It will be created if it doesn\(aqt exist.
.sp
If desired, the output directory can be set for each entity separately. If no \(aqoutput directory\(aq is included in the config, the entity will use the parent\(aqs setting.
.sp
This setting is required for the top level entity (usually an \fBExperiment\fP) in each analysis.
.TP
.B \fB\(aqconditions\(aq\fP \- \fIrequired\fP
List of experimental conditions, each having the following format.
.INDENT 7.0
.TP
.B \fB\(aqlabel\(aq\fP \- \fIrequired\fP
Label for the condition. Must be unique and alphanumeric.
.TP
.B \fB\(aqselection\(aq\fP \- \fIrequired\fP
List of \fBSelection\fP config objects for selection performed under this condition.
.TP
.B \fB\(aqcontrol\(aq\fP
If this is \fBTrue\fP, this condition will be treated as the control for normalization purposes. Only one control condition may be specified.
.UNINDENT
.TP
.B \fB\(aqnormalize wt\(aq\fP
If this is \fBTrue\fP, normalize all scores or ratios using the wild type score or ratio as neutral.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fIgenindex\fP
.IP \(bu 2
\fImodindex\fP
.IP \(bu 2
\fIsearch\fP
.UNINDENT
.SH AUTHOR
Alan F Rubin and Douglas M Fowler
.SH COPYRIGHT
2013, Alan F Rubin and Douglas M Fowler
.\" Generated by docutils manpage writer.
.
